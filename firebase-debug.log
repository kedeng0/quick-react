[debug] [2019-09-29T01:34:21.393Z] ----------------------------------------------------------------------
[debug] [2019-09-29T01:34:21.395Z] Command:       /usr/local/bin/node /usr/local/bin/firebase init
[debug] [2019-09-29T01:34:21.395Z] CLI Version:   7.4.0
[debug] [2019-09-29T01:34:21.395Z] Platform:      darwin
[debug] [2019-09-29T01:34:21.395Z] Node Version:  v10.16.3
[debug] [2019-09-29T01:34:21.395Z] Time:          Sat Sep 28 2019 21:34:21 GMT-0400 (Eastern Daylight Time)
[debug] [2019-09-29T01:34:21.395Z] ----------------------------------------------------------------------
[debug] 
[debug] [2019-09-29T01:34:21.401Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-09-29T01:34:21.402Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/kedeng/Desktop/cs397/quick-react

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2019-09-29T01:39:11.028Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2019-09-29T01:39:11.028Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2019-09-29T01:39:11.149Z] <<< HTTP RESPONSE 200
[debug] [2019-09-29T01:39:11.161Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2019-09-29T01:39:11.413Z] <<< HTTP RESPONSE 200
[info] i  Using project cs497-course-scheduler (CS497 Course Scheduler)
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2019-09-29T01:39:18.644Z] >>> HTTP REQUEST GET https://cs497-course-scheduler.firebaseio.com/.settings/rules.json  
 
[debug] [2019-09-29T01:39:19.094Z] <<< HTTP RESPONSE 200
[info] âœ”  Database Rules for cs497-course-scheduler have been downloaded to database.rules.json.
[info] Future modifications to database.rules.json will update Database Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2019-09-29T01:39:19.097Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-09-29T01:39:19.097Z] > authorizing via signed-in user
[debug] [2019-09-29T01:39:19.097Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/cs497-course-scheduler  
 
[debug] [2019-09-29T01:39:19.259Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-09-29T01:39:20.107Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/cs497-course-scheduler/releases?pageSize=10&pageToken=  
 
[debug] [2019-09-29T01:39:20.414Z] <<< HTTP RESPONSE 200
[debug] [2019-09-29T01:39:20.414Z] Found ruleset: projects/cs497-course-scheduler/rulesets/54e3eb6c-3af3-4ae9-bb44-cad0d8a93ba3
[debug] [2019-09-29T01:39:20.415Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/cs497-course-scheduler/rulesets/54e3eb6c-3af3-4ae9-bb44-cad0d8a93ba3  
 
[debug] [2019-09-29T01:39:20.731Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-09-29T01:39:24.736Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/cs497-course-scheduler/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2019-09-29T01:39:24.737Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/cs497-course-scheduler/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2019-09-29T01:39:25.135Z] <<< HTTP RESPONSE 200
[debug] [2019-09-29T01:39:25.136Z] <<< HTTP RESPONSE 200
[debug] [2019-09-29T01:39:25.208Z] Error: EISDIR: illegal operation on a directory, open '/Users/kedeng/Desktop/cs397/quick-react'
    at Object.openSync (fs.js:443:3)
    at Object.writeFileSync (fs.js:1194:35)
    at Config.writeProjectFile (/usr/local/lib/node_modules/firebase-tools/lib/config.js:179:8)
    at getIndexesFromConsole.then (/usr/local/lib/node_modules/firebase-tools/lib/init/features/firestore/indexes.js:56:31)
    at process._tickCallback (internal/process/next_tick.js:68:7)
[error] 
[error] Error: An unexpected error has occurred.
